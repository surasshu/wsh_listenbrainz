// ==PREPROCESSOR==
// @name "WSH Listenbrainz"
// @author "marc2003"
// ==/PREPROCESSOR==

//get your token from http://listenbrainz.org/user/import
var token = "";
//if true, outputs submission data to the foobar2000 console
var show_data = false;
//if true, all plays will be logged to file(s) inside your foobar2000 profile
//or main foobar folder if using portable mode
//%appdata%\foobar2000\listenbrainz\MM.YYYY.json
//d:\apps\foobar2000\listenbrainz\MM.YYYY.json
var log_data = true;
//////////////////////////////////////////////////////////////////////////////////
var xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
var time_elapsed = 0;
var target_time = 0;
var timestamp = 0;
var exclusions = "log|cuesheet|lyrics|unsynced lyrics";
var mb_names = {
	"acoustid id" : "acoustid_id",
	"acoustid fingerprint" : "acoustid_fingerprint",
	"musicbrainz album artist id" : "musicbrainz_albumartistid",
	"musicbrainz album id" : "musicbrainz_albumid",
	"musicbrainz artist id" : "musicbrainz_artistid",
	"musicbrainz disc id" : "musicbrainz_discid",
	"musicbrainz release group id" : "musicbrainz_releasegroupid",
	"musicbrainz release track id" : "musicbrainz_releasetrackid",
	"musicbrainz trm id" : "musicbrainz_trmid",
	"musicbrainz work id" : "musicbrainz_workid",
	"musicip puid" : "musicip_puid",
	"musicbrainz album release country" : "releasecountry",
	"musicbrainz album status" : "releasestatus",
	"musicbrainz album type" : "releasetype"
}

if (log_data) {
	var fso = new ActiveXObject("Scripting.FileSystemObject");
	var folder = fb.ProfilePath + "listenbrainz\\";
	if (!fso.FolderExists(folder))
		fso.CreateFolder(folder);
}

function on_paint(gr) {
	gr.FillSolidRect(0, 0, window.Width, window.Height, utils.GetSysColor(15));
}

function on_playback_new_track() {
	time_elapsed = 0;
	//this determines how much of the track must be played before it counts
	//currently doing it the last.fm way...
	target_time = Math.min(Math.ceil(fb.PlaybackLength / 2), 240);
}

function on_playback_time() {
	time_elapsed++;
	if (time_elapsed == target_time)
		listen();
}

function listen() {
	if (token.length != 36)
		return fb.trace("WSH Listenbrainz: Token not set.");
	
	var metadb = fb.GetNowPlaying();
	if (!metadb)
		return;
	
	var timestamp = Math.floor(new Date().getTime() / 1000);
	
	var tags = {};
	var f = metadb.GetFileInfo();
	for (var i = 0; i < f.MetaCount; i++) {
		var name = f.MetaName(i).toLowerCase();
		if (exclusions.indexOf(name) > -1)
			continue;
		
		if (typeof(mb_names[name]) == "string")
			var key = mb_names[name];
		else
			var key = name;
		
		var num = tf("$meta_num(" + name + ")", metadb);
		if (num == 1) {
			tags[key] = tf("$meta(" + name + ")", metadb);
		} else {
			tags[key] = [];
			for (var j = 0; j < num; j++) {
				tags[key].push(tf("$meta(" + name + "," + j + ")", metadb));
			}
		}
	}
	
	if (!tags.artist || !tags.title)
		return fb.trace("WSH Listenbrainz: Artist/title tag missing. Not submitting.");
	
	var data = {
		listen_type : "single",
		payload : [{
			track_metadata : {
				track_name : tags.title,
				artist_name : tags.artist,
				release_name : tags.album,
				additional_info : tags
			},
			listened_at : timestamp
		}]
	};
	
	fb.trace("WSH Listenbrainz: Submitting '" + tags.artist + " - " + tags.title + "'");
	
	if (show_data) {
		//spam the console!
		fb.trace("WSH Listenbrainz: This is the post data being sent...");
		fb.trace(JSON.stringify(data, null, "    "));
	}
	
	if (log_data)
		log(data);
	
	post(data);
}

function log(data) {
	var d = new Date();
	var f = folder + pad(d.getMonth() + 1) + "." + d.getFullYear() + ".json";
	if (fso.FileExists(f)) {
		var json = json_parse(utils.ReadTextFile(f));
		if (json.payload)
			json = json.payload;
	} else {
		var json = [];
	}
	json.unshift(data.payload[0]);
	save(JSON.stringify(json), f);
}

function post(data) {
	xmlhttp.open("POST", "https://api.listenbrainz.org/1/submit-listens", true);
	xmlhttp.setRequestHeader("Content-type", "application/json;charset=UTF-8");
	xmlhttp.setRequestHeader("Authorization" , "Token " + token);
	xmlhttp.send(JSON.stringify(data));
	xmlhttp.onreadystatechange = function () {
		if (xmlhttp.readyState == 4) {
			fb.trace("WSH Listenbrainz: HTTP status: " + xmlhttp.status);
			xmlhttp.responsetext && fb.trace("WSH Listenbrainz: " + xmlhttp.responsetext);
		}
	}
}

function tf(t, m) {
	return fb.TitleFormat(t).EvalWithMetadb(m);
}

function pad(num) {
	return num < 10 ? "0" + num : num;
}

function json_parse(text) {
	try {
		return JSON.parse(text);
	} catch(e) {
		return [];
	}
}

function save(text, file) {
	try {
		var ts = fso.OpenTextFile(file, 2, true, 0);
		ts.WriteLine(text);
		ts.Close();
		return true;
	} catch (e) {
		return false;
	}
}
